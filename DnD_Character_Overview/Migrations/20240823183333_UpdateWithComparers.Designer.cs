// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DnD_CO.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240823183333_UpdateWithComparers")]
    partial class UpdateWithComparers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Models.CharacterClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("DMCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("PlayerCharacterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DMCharacterId");

                    b.HasIndex("PlayerCharacterId");

                    b.ToTable("CharacterClass");
                });

            modelBuilder.Entity("Models.DMCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<string>("Conditions")
                        .HasColumnType("longtext");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentHP")
                        .HasColumnType("int");

                    b.Property<int?>("DarkvisionRange")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int?>("FlyingSpeed")
                        .HasColumnType("int");

                    b.Property<bool>("HasOver20Stats")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KnownLanguages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LegendaryActions")
                        .HasColumnType("longtext");

                    b.Property<int>("MaxHP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resistances")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SpecialAbilities")
                        .HasColumnType("longtext");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("SwimmingSpeed")
                        .HasColumnType("int");

                    b.Property<int>("TempHP")
                        .HasColumnType("int");

                    b.Property<int>("WalkingSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Weaknesses")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DMCharacters");
                });

            modelBuilder.Entity("Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DMCharacterId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("PlayerCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SharedInventoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("WeightUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DMCharacterId");

                    b.HasIndex("PlayerCharacterId");

                    b.HasIndex("SharedInventoryId");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("Models.PlayerCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<string>("Conditions")
                        .HasColumnType("longtext");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentHP")
                        .HasColumnType("int");

                    b.Property<int?>("DarkvisionRange")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int?>("FlyingSpeed")
                        .HasColumnType("int");

                    b.Property<bool>("HasOver20Stats")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KnownLanguages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxHP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resistances")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("SwimmingSpeed")
                        .HasColumnType("int");

                    b.Property<int>("TempHP")
                        .HasColumnType("int");

                    b.Property<int>("WalkingSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Weaknesses")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayerCharacters");
                });

            modelBuilder.Entity("Models.SharedInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("SharedInventory");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("Models.CharacterClass", b =>
                {
                    b.HasOne("Models.DMCharacter", null)
                        .WithMany("CharacterClasses")
                        .HasForeignKey("DMCharacterId");

                    b.HasOne("Models.PlayerCharacter", "PlayerCharacter")
                        .WithMany("CharacterClasses")
                        .HasForeignKey("PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerCharacter");
                });

            modelBuilder.Entity("Models.InventoryItem", b =>
                {
                    b.HasOne("Models.DMCharacter", "DMCharacter")
                        .WithMany("InventoryItems")
                        .HasForeignKey("DMCharacterId");

                    b.HasOne("Models.PlayerCharacter", "PlayerCharacter")
                        .WithMany("InventoryItems")
                        .HasForeignKey("PlayerCharacterId");

                    b.HasOne("Models.SharedInventory", "SharedInventory")
                        .WithMany("InventoryItems")
                        .HasForeignKey("SharedInventoryId");

                    b.Navigation("DMCharacter");

                    b.Navigation("PlayerCharacter");

                    b.Navigation("SharedInventory");
                });

            modelBuilder.Entity("Models.DMCharacter", b =>
                {
                    b.Navigation("CharacterClasses");

                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("Models.PlayerCharacter", b =>
                {
                    b.Navigation("CharacterClasses");

                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("Models.SharedInventory", b =>
                {
                    b.Navigation("InventoryItems");
                });
#pragma warning restore 612, 618
        }
    }
}
