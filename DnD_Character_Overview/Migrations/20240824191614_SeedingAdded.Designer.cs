// <auto-generated />
using System;
using Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DnD_CO.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240824191614_SeedingAdded")]
    partial class SeedingAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Models.CharacterClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("DMCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("PlayerCharacterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DMCharacterId");

                    b.HasIndex("PlayerCharacterId");

                    b.ToTable("CharacterClass");
                });

            modelBuilder.Entity("Models.DMCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<string>("Conditions")
                        .HasColumnType("longtext");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentHP")
                        .HasColumnType("int");

                    b.Property<int?>("DarkvisionRange")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int?>("FlyingSpeed")
                        .HasColumnType("int");

                    b.Property<bool>("HasOver20Stats")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KnownLanguages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LegendaryActions")
                        .HasColumnType("longtext");

                    b.Property<int>("MaxHP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resistances")
                        .HasColumnType("longtext");

                    b.Property<string>("SpecialAbilities")
                        .HasColumnType("longtext");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("SwimmingSpeed")
                        .HasColumnType("int");

                    b.Property<int>("TempHP")
                        .HasColumnType("int");

                    b.Property<int>("WalkingSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Weaknesses")
                        .HasColumnType("longtext");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DMCharacters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArmorClass = 17,
                            Charisma = 12,
                            Conditions = "",
                            Constitution = 16,
                            CurrentHP = 100,
                            Dexterity = 14,
                            HasOver20Stats = false,
                            Intelligence = 8,
                            IsAlive = true,
                            KnownLanguages = "Common,Orc",
                            LegendaryActions = "Legendary Slash, Intimidating Roar",
                            MaxHP = 100,
                            Name = "Zugthrok the Mighty",
                            Race = "Orc",
                            Resistances = "Bludgeoning,Poison",
                            SpecialAbilities = "Darkvision, Fury of Blows",
                            Strength = 18,
                            TempHP = 0,
                            WalkingSpeed = 30,
                            Weaknesses = "Psychic,Fire",
                            Wisdom = 10
                        });
                });

            modelBuilder.Entity("Models.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DMCharacterId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("PlayerCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SharedInventoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("WeightUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DMCharacterId");

                    b.HasIndex("PlayerCharacterId");

                    b.HasIndex("SharedInventoryId");

                    b.ToTable("InventoryItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemName = "Sword",
                            PlayerCharacterId = 1,
                            Quantity = 1,
                            Weight = 3.0m,
                            WeightUnit = "lb"
                        },
                        new
                        {
                            Id = 2,
                            ItemName = "Shield",
                            PlayerCharacterId = 2,
                            Quantity = 1,
                            Weight = 6.0m,
                            WeightUnit = "lb"
                        },
                        new
                        {
                            Id = 3,
                            DMCharacterId = 1,
                            ItemName = "Health Potion",
                            Quantity = 5,
                            Weight = 0.5m,
                            WeightUnit = "lb"
                        });
                });

            modelBuilder.Entity("Models.PlayerCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<string>("Conditions")
                        .HasColumnType("longtext");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentHP")
                        .HasColumnType("int");

                    b.Property<int?>("DarkvisionRange")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int?>("FlyingSpeed")
                        .HasColumnType("int");

                    b.Property<bool>("HasOver20Stats")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("KnownLanguages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxHP")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resistances")
                        .HasColumnType("longtext");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("SwimmingSpeed")
                        .HasColumnType("int");

                    b.Property<int>("TempHP")
                        .HasColumnType("int");

                    b.Property<int>("WalkingSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Weaknesses")
                        .HasColumnType("longtext");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayerCharacters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArmorClass = 16,
                            Charisma = 16,
                            Conditions = "",
                            Constitution = 14,
                            CurrentHP = 35,
                            Dexterity = 14,
                            HasOver20Stats = false,
                            Intelligence = 12,
                            IsAlive = true,
                            KnownLanguages = "Common",
                            MaxHP = 40,
                            Name = "Arthas",
                            PlayerName = "John",
                            Race = "Human",
                            Resistances = "Bludgeoning,Cold",
                            Strength = 16,
                            TempHP = 0,
                            WalkingSpeed = 30,
                            Weaknesses = "Fire,Lightning",
                            Wisdom = 10
                        },
                        new
                        {
                            Id = 2,
                            ArmorClass = 14,
                            Charisma = 18,
                            Conditions = "",
                            Constitution = 12,
                            CurrentHP = 25,
                            DarkvisionRange = 60,
                            Dexterity = 16,
                            HasOver20Stats = false,
                            Intelligence = 14,
                            IsAlive = true,
                            KnownLanguages = "Common,Elvish",
                            MaxHP = 30,
                            Name = "Luna",
                            PlayerName = "Jane",
                            Race = "Half-Elf",
                            Resistances = "Radiant,Thunder",
                            Strength = 10,
                            SwimmingSpeed = 30,
                            TempHP = 0,
                            WalkingSpeed = 30,
                            Weaknesses = "Necrotic,Poison",
                            Wisdom = 14
                        });
                });

            modelBuilder.Entity("Models.SharedInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("SharedInventory");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("Models.CharacterClass", b =>
                {
                    b.HasOne("Models.DMCharacter", null)
                        .WithMany("CharacterClasses")
                        .HasForeignKey("DMCharacterId");

                    b.HasOne("Models.PlayerCharacter", "PlayerCharacter")
                        .WithMany("CharacterClasses")
                        .HasForeignKey("PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerCharacter");
                });

            modelBuilder.Entity("Models.InventoryItem", b =>
                {
                    b.HasOne("Models.DMCharacter", "DMCharacter")
                        .WithMany("InventoryItems")
                        .HasForeignKey("DMCharacterId");

                    b.HasOne("Models.PlayerCharacter", "PlayerCharacter")
                        .WithMany("InventoryItems")
                        .HasForeignKey("PlayerCharacterId");

                    b.HasOne("Models.SharedInventory", "SharedInventory")
                        .WithMany("InventoryItems")
                        .HasForeignKey("SharedInventoryId");

                    b.Navigation("DMCharacter");

                    b.Navigation("PlayerCharacter");

                    b.Navigation("SharedInventory");
                });

            modelBuilder.Entity("Models.DMCharacter", b =>
                {
                    b.Navigation("CharacterClasses");

                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("Models.PlayerCharacter", b =>
                {
                    b.Navigation("CharacterClasses");

                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("Models.SharedInventory", b =>
                {
                    b.Navigation("InventoryItems");
                });
#pragma warning restore 612, 618
        }
    }
}
